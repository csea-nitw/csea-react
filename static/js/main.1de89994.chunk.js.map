{"version":3,"sources":["media/images/csealogo-QUIZIX.png","components/navbar.tsx","pages/login.tsx","media/images/hey.png","pages/waiting.tsx","pages/signup.tsx","constants/sampleQuizmas.tsx","pages/quizmas.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":[],"mappings":"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","file":"static/js/main.1de89994.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/csealogo-QUIZIX.b2f33a82.png\";","import * as React from 'react';\nimport AppBar from '@mui/material/AppBar';\nimport Toolbar from '@mui/material/Toolbar';\nimport { Button, Grid, Typography } from '@mui/material';\nimport { createTheme, responsiveFontSizes, ThemeProvider } from '@mui/material/styles';\nimport Csealogo from '../media/images/csealogo-QUIZIX.png';\n\nlet theme = createTheme();\ntheme = responsiveFontSizes(theme);\n\nconst ButtonAppBar = () => {\n  const [register, setRegister] = React.useState(false);\n  const localAuth = localStorage.getItem('csea-quizmas-token');\n  React.useEffect(() => {\n    if (localAuth) {\n      setRegister(true);\n    } else setRegister(false);\n  });\n  return (\n    <AppBar position=\"sticky\" style={{ backgroundColor: 'black' }}>\n      <Toolbar>\n        <Grid\n          container\n          direction=\"row\"\n          style={{\n            position: 'absolute',\n            left: '60%',\n            top: '50%',\n            transform: 'translate(-50%, -50%)',\n          }}\n        >\n          <Grid item md={9} xs={7}>\n            <img\n              src={Csealogo}\n              style={{\n                margin: 'auto',\n                textAlign: 'center',\n                maxHeight: '30px',\n              }}\n              alt=\"CSEA\"\n            />{' '}\n          </Grid>\n          {register ? (\n            <ThemeProvider theme={theme}>\n              <Grid item md={2} xs={4}>\n                <Button\n                  style={{\n                    color: 'white',\n                  }}\n                  onClick={() => {\n                    localStorage.removeItem('csea-quizmas-token');\n                    window.location.href = '/csea-react/#';\n                    setRegister(false);\n                  }}\n                >\n                  <Typography> Logout</Typography>\n                </Button>\n              </Grid>\n            </ThemeProvider>\n          ) : (\n            <></>\n          )}\n        </Grid>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport { ButtonAppBar as Navbar };\n","/* eslint no-underscore-dangle: [\"error\", { \"allow\": [\"_id\"] }] */\n\nimport * as React from 'react';\nimport Avatar from '@mui/material/Avatar';\nimport Button from '@mui/material/Button';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport TextField from '@mui/material/TextField';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Checkbox from '@mui/material/Checkbox';\nimport { Link } from 'react-router-dom';\nimport Paper from '@mui/material/Paper';\nimport Box from '@mui/material/Box';\nimport Grid from '@mui/material/Grid';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport Alert from '@mui/material/Alert';\nimport IconButton from '@mui/material/IconButton';\nimport Collapse from '@mui/material/Collapse';\nimport CloseIcon from '@mui/icons-material/Close';\nimport Typography from '@mui/material/Typography';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport { useNavigate } from 'react-router-dom';\nimport { Navbar } from '../components/navbar';\n\nconst theme = createTheme();\n\nfunction SignIn() {\n  const navigate = useNavigate();\n  const [open, setOpen] = React.useState(false);\n  const errText = 'Username or password did not match with records';\n  const [email, setEmail] = React.useState('');\n  const [password, setPassword] = React.useState('');\n  const [signIn, setSignIn] = React.useState({ user: { _id: '' } });\n  React.useEffect(() => {\n    if (signIn.user._id) {\n      localStorage.setItem('csea-quizmas-token', signIn.user._id);\n      navigate('/wait');\n    }\n  }, [signIn]);\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    const controller = new AbortController();\n    const id = setTimeout(() => controller.abort(), 5000);\n    const requestOptions = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({\n        email,\n        password,\n      }),\n      signal: controller.signal,\n    };\n    fetch('https://csea-backend.herokuapp.com/api/signin', requestOptions)\n      .then((response) => {\n        if (!response.ok) {\n          setOpen(true);\n          throw new Error('response is not ok');\n        }\n        if (response.status !== 200) {\n          setOpen(true);\n          throw new Error('Status code is not 200');\n        }\n        return response.json();\n      })\n      .then((res) => setSignIn(res))\n      .catch((err) => {\n        console.log(err);\n        // window.location.href = '/';\n      })\n      .finally(() => clearTimeout(id));\n  };\n  return (\n    <ThemeProvider theme={theme}>\n      <Navbar />\n      <Grid container component=\"main\" sx={{ height: '95vh' }} justifyContent=\"center\">\n        <CssBaseline />\n\n        <Grid\n          item\n          xs={12}\n          sm={8}\n          md={5}\n          sx={{ margin: '20px' }}\n          component={Paper}\n          elevation={2}\n          square\n        >\n          <Box\n            sx={{\n              my: 8,\n              mx: 4,\n              display: 'flex',\n              flexDirection: 'column',\n              alignItems: 'center',\n            }}\n          >\n            <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\n              <LockOutlinedIcon />\n            </Avatar>\n            <Typography component=\"h1\" variant=\"h5\">\n              Sign in\n            </Typography>\n            <Box component=\"form\" noValidate onSubmit={handleSubmit} sx={{ mt: 1 }}>\n              <Collapse in={open}>\n                <Alert\n                  severity=\"error\"\n                  action={\n                    <IconButton\n                      aria-label=\"close\"\n                      color=\"inherit\"\n                      size=\"small\"\n                      onClick={() => {\n                        setOpen(false);\n                      }}\n                    >\n                      <CloseIcon fontSize=\"inherit\" />\n                    </IconButton>\n                  }\n                  sx={{ mb: 2 }}\n                >\n                  {errText}\n                </Alert>\n              </Collapse>\n              <TextField\n                margin=\"normal\"\n                required\n                fullWidth\n                id=\"email\"\n                label=\"Email Address\"\n                name=\"email\"\n                autoComplete=\"email\"\n                autoFocus\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n              />\n\n              <TextField\n                margin=\"normal\"\n                required\n                fullWidth\n                name=\"password\"\n                label=\"Password\"\n                type=\"password\"\n                id=\"password\"\n                autoComplete=\"current-password\"\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n              />\n              <FormControlLabel\n                control={<Checkbox value=\"remember\" color=\"primary\" />}\n                label=\"Remember me\"\n              />\n              <Button\n                type=\"submit\"\n                fullWidth\n                variant=\"contained\"\n                sx={{ mt: 3, mb: 2, backgroundColor: 'black' }}\n              >\n                Sign In\n              </Button>\n              <Grid container>\n                <Grid item margin=\"auto\">\n                  <Link to=\"/register\">Dont have an account? Sign Up</Link>\n                </Grid>\n              </Grid>\n            </Box>\n          </Box>\n        </Grid>\n      </Grid>\n    </ThemeProvider>\n  );\n}\n\nexport { SignIn };\n","export default __webpack_public_path__ + \"static/media/hey.8cc99259.png\";","import { Grid, Typography, Button, Card, CardContent, Box } from '@mui/material';\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate, Link } from 'react-router-dom';\n// import Countdown from 'react-countdown';\nimport { createTheme, responsiveFontSizes, ThemeProvider } from '@mui/material/styles';\nimport Alert from '@mui/material/Alert';\nimport IconButton from '@mui/material/IconButton';\nimport Collapse from '@mui/material/Collapse';\nimport CloseIcon from '@mui/icons-material/Close';\nimport '../css/gradient.css';\nimport '../css/waiting-bg.css';\nimport { Navbar } from '../components/navbar';\nimport Zakir from '../media/images/hey.png';\n\nlet theme = createTheme();\ntheme = responsiveFontSizes(theme);\nfunction Waiting() {\n  // const startTime = 1640442600000;\n  const [open, setOpen] = useState(true);\n\n  // const active = true;\n  const navigate = useNavigate();\n  useEffect(() => {\n    const localAuth = localStorage.getItem('csea-quizmas-token');\n    if (!localAuth) {\n      navigate('/register');\n    }\n    // if (!window.location.hash) {\n    //   window.location.href += '#loaded';\n    //   window.location.reload();\n    // }\n    // return () => {\n    //   window.location.reload();\n    // };\n  }, []);\n\n  // const instructText = {\n  //   fontSize: '0.8rem',\n  // };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Navbar />\n      <Grid\n        container\n        direction=\"row\"\n        alignItems=\"center\"\n        justifyContent=\"space-around\"\n        spacing={2}\n        style={{ height: '91.5vh', backgroundColor: '#FAFAFA' }}\n        className=\"css-bg-selector\"\n      >\n        <Grid item xs={12} md={6} className=\"noselect\">\n          <Collapse in={open}>\n            <Alert\n              severity=\"success\"\n              action={\n                <IconButton\n                  aria-label=\"close\"\n                  color=\"inherit\"\n                  size=\"small\"\n                  onClick={() => {\n                    setOpen(false);\n                  }}\n                >\n                  <CloseIcon fontSize=\"inherit\" />\n                </IconButton>\n              }\n              sx={{ mb: 2 }}\n            >\n              {/* <Grid container direction=\"row\">\n                  <Grid item container md={6} direction=\"column\">\n                  <Grid item md={2} margin=\"auto\">\n                    <Typography fontWeight=\"bold\">\n                      {' '}\n                      Answer for the last question was &apos;Alan Turing&apos;..\n                    </Typography>\n                  </Grid>\n                </Grid> */}\n              <Grid item md={6} margin=\"auto\">\n                <Typography fontWeight=\"bold\">Hey you!!</Typography>\n                <img src={Zakir} alt=\"itni si baat pe dil chota nhi krte bhole\" />\n                {/* <Typography fontWeight=\"bold\">Do not repeat Santa&apos;s mistake</Typography>\n                <Typography fontWeight=\"bold\">- Developer</Typography> */}\n                <Typography fontWeight=\"bold\">\n                  Yesterday&apos;s answer was &apos;Microsoft&apos;.\n                </Typography>\n              </Grid>\n              {/* </Grid>  */}\n            </Alert>\n          </Collapse>\n          <Card className=\"css-selector\" sx={{ height: '100%', boxShadow: '3', margin: '2rem' }}>\n            <CardContent>\n              <Box\n                sx={{\n                  textAlign: 'left',\n                  marginTop: '0',\n                  color: 'white',\n                  fontWeight: '700',\n                  fontSize: '0.8rem',\n                }}\n              >\n                <span\n                  style={{\n                    border: '2px solid white',\n                    padding: '3px 5px',\n                    borderRadius: '15px',\n                  }}\n                >\n                  Current Contest\n                </span>\n              </Box>\n              <Typography variant=\"h4\" color=\"black\" fontWeight={500}>\n                Quizzmas 2021\n              </Typography>\n              <Typography\n                fontSize=\".9rem\"\n                sx={{ fontWeight: '500', color: 'black', marginBottom: '1rem' }}\n              >\n                Dec 30 @ 8:00 pm IST\n              </Typography>\n              {/* comment before quiz */}\n              <Link to=\"/61c6b095c51a9900231414e6\">\n                <Button variant=\"contained\" sx={{ color: 'white' }} size=\"small\" disableElevation>\n                  {' '}\n                  Start Quiz\n                </Button>\n              </Link>\n              {/* comment when quiz will start */}\n              {/* <Button variant=\"outlined\" size=\"small\" disableElevation disabled>\n                {' '}\n                <Typography textAlign=\"left\">\n                  Quiz will start in <Countdown date={startTime} />\n                </Typography>\n              </Button> */}\n\n              {/* To be figure out */}\n              {/* {active ? (\n                <Link to=\"/61c6b095c51a9900231414e6\">\n                  <Button\n                    variant=\"contained\"\n                    sx={{ color: 'white' }}\n                    size=\"small\"\n                    disableElevation\n                    disabled={active}\n                  >\n                    {' '}\n                    Start Quiz\n                  </Button>\n                </Link>\n              ) : (\n                <Button variant=\"outlined\" size=\"small\" disableElevation disabled={!active}>\n                  {' '}\n                  <Typography textAlign=\"left\">\n                    Quiz will start in <Countdown date={startTime} />\n                  </Typography>\n                </Button>\n              )} */}\n            </CardContent>\n          </Card>\n        </Grid>\n        {/* <Grid\n          item\n          xs={12}\n          md={6}\n          sx={{\n            padding: '30px',\n            margin: '2rem',\n            textAlign: 'left',\n            border: '1px solid',\n          }}\n        >\n          <Typography variant=\"h5\">Instructions</Typography>\n          <hr />\n          <br />\n          <Typography sx={instructText}>\n            1. You <strong>CAN</strong> use calculators\n          </Typography>\n          <Typography sx={instructText}>\n            2. You <strong>CAN</strong> switch tabs during contest\n          </Typography>\n          <Typography sx={instructText}>\n            3. <strong>Don&apos;t</strong> click on submit before you&apos;re done as system will\n            accept only first entry as valid attempt\n          </Typography>\n          <Typography sx={instructText}>\n            4.{' '}\n            <strong>\n              The platform is still under development so don&apos;t refresh while you attempt the\n              quiz\n            </strong>\n          </Typography>\n        </Grid> */}\n        {/* <Grid item>\n          <hr style={{ width: '100vw', marginBottom: '20px' }} />\n          \n        </Grid> */}\n      </Grid>\n    </ThemeProvider>\n  );\n}\n\nexport { Waiting };\n","import * as React from 'react';\nimport Avatar from '@mui/material/Avatar';\nimport Button from '@mui/material/Button';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport TextField from '@mui/material/TextField';\nimport Link from '@mui/material/Link';\nimport Paper from '@mui/material/Paper';\nimport Box from '@mui/material/Box';\nimport Grid from '@mui/material/Grid';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport { useNavigate } from 'react-router-dom';\nimport Typography from '@mui/material/Typography';\nimport Alert from '@mui/material/Alert';\nimport IconButton from '@mui/material/IconButton';\nimport Collapse from '@mui/material/Collapse';\nimport CloseIcon from '@mui/icons-material/Close';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport { Navbar } from '../components/navbar';\n\nconst theme = createTheme();\n\nfunction SignUp() {\n  const errText = 'Mobile number or mail already in use';\n  const [open, setOpen] = React.useState(false);\n  const [firstName, setFirstName] = React.useState('');\n  const [lastName, setLastName] = React.useState('');\n  const [email, setEmail] = React.useState('');\n  const [phone, setPhone] = React.useState('');\n  const [password, setPassword] = React.useState('');\n  const [passwordR, setPasswordR] = React.useState('');\n  const [allOk, setAllOk] = React.useState(false);\n  const [userId, setUserId] = React.useState('');\n  const navigate = useNavigate();\n  React.useEffect(() => {\n    setAllOk(\n      firstName.length >= 2 &&\n        lastName.length >= 2 &&\n        password.length >= 6 &&\n        email.length !== 0 &&\n        phone.length === 10 &&\n        password === passwordR,\n    );\n  }, [firstName, lastName, email, password]);\n\n  React.useEffect(() => {\n    const checkAlreadySigned = localStorage.getItem('csea-quizmas-token');\n    // console.log(checkAlreadySigned);\n    if (checkAlreadySigned) {\n      navigate('/wait');\n    }\n  }, []);\n\n  React.useEffect(() => {\n    if (userId) {\n      // console.log(userId);\n      localStorage.setItem('csea-quizmas-token', userId);\n      navigate('/wait');\n    }\n  }, [userId]);\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    // alert(firstName + lastName + email + phone + password);\n    // eslint-disable-next-line no-console\n    const controller = new AbortController();\n    const id = setTimeout(() => controller.abort(), 5000);\n    const requestOptions = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({\n        email,\n        name: firstName,\n        mobile_no: phone,\n        password,\n      }),\n      signal: controller.signal,\n    };\n    fetch('https://csea-backend.herokuapp.com/api/signup', requestOptions)\n      .then((response) => {\n        if (!response.ok) {\n          setOpen(true);\n          throw new Error('response is not ok');\n        }\n        if (response.status !== 200) {\n          setOpen(true);\n\n          throw new Error('Status code is not 200');\n        }\n        return response.json();\n      })\n      .then((val) => setUserId(val.id))\n      .catch((err) => {\n        console.log(err);\n        // window.location.href = '/';\n      })\n      .finally(() => clearTimeout(id));\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Navbar />\n      <Grid container component=\"main\" sx={{ height: '100%' }} justifyContent=\"center\">\n        <CssBaseline />\n\n        <Grid\n          item\n          xs={12}\n          sm={8}\n          md={5}\n          sx={{ margin: '20px' }}\n          component={Paper}\n          elevation={2}\n          square\n        >\n          <Box\n            sx={{\n              my: 8,\n              mx: 4,\n              display: 'flex',\n              flexDirection: 'column',\n              alignItems: 'center',\n            }}\n          >\n            <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\n              <LockOutlinedIcon />\n            </Avatar>\n            <Typography component=\"h1\" variant=\"h5\">\n              Register for Quizzmas\n            </Typography>\n            <Box component=\"form\" noValidate onSubmit={handleSubmit} sx={{ mt: 1 }}>\n              <Collapse in={open}>\n                <Alert\n                  severity=\"error\"\n                  action={\n                    <IconButton\n                      aria-label=\"close\"\n                      color=\"inherit\"\n                      size=\"small\"\n                      onClick={() => {\n                        setOpen(false);\n                      }}\n                    >\n                      <CloseIcon fontSize=\"inherit\" />\n                    </IconButton>\n                  }\n                  sx={{ mb: 2 }}\n                >\n                  {errText}\n                </Alert>\n              </Collapse>\n              <TextField\n                margin=\"normal\"\n                required\n                fullWidth\n                id=\"first_name\"\n                label=\"First Name\"\n                name=\"firstName\"\n                autoComplete=\"name\"\n                autoFocus\n                value={firstName}\n                onChange={(e) => {\n                  setFirstName(e.target.value);\n                }}\n              />\n              <TextField\n                margin=\"normal\"\n                required\n                fullWidth\n                id=\"last_name\"\n                label=\"Last Name\"\n                name=\"lastName\"\n                autoComplete=\"name\"\n                autoFocus\n                value={lastName}\n                onChange={(e) => {\n                  setLastName(e.target.value);\n                }}\n              />\n              <TextField\n                margin=\"normal\"\n                required\n                fullWidth\n                id=\"email\"\n                label=\"Email Address\"\n                name=\"email\"\n                autoComplete=\"email\"\n                autoFocus\n                value={email}\n                onChange={(e) => {\n                  setEmail(e.target.value);\n                }}\n              />\n              <TextField\n                margin=\"normal\"\n                required\n                fullWidth\n                id=\"phoneNum\"\n                label=\"Mobile Number\"\n                name=\"phone\"\n                type=\"number\"\n                autoFocus\n                value={phone}\n                onChange={(e) => {\n                  setPhone(e.target.value);\n                }}\n              />\n              <TextField\n                margin=\"normal\"\n                required\n                fullWidth\n                name=\"confirmPassword\"\n                label=\"Password\"\n                type=\"password\"\n                id=\"confirmPassword\"\n                value={passwordR}\n                onChange={(e) => {\n                  setPasswordR(e.target.value);\n                }}\n              />\n              <TextField\n                margin=\"normal\"\n                required\n                fullWidth\n                name=\"password\"\n                label=\"Confirm Password\"\n                type=\"password\"\n                id=\"password\"\n                autoComplete=\"current-password\"\n                value={password}\n                onChange={(e) => {\n                  setPassword(e.target.value);\n                }}\n              />\n\n              <Button\n                type=\"submit\"\n                fullWidth\n                variant=\"contained\"\n                disabled={!allOk}\n                sx={{ mt: 3, mb: 2 }}\n              >\n                Register\n              </Button>\n              <Grid container>\n                <Grid item>\n                  <Link href=\"#\" variant=\"body2\">\n                    Already have an account? Log In\n                  </Link>\n                </Grid>\n              </Grid>\n              <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\" mt={1}>\n                {'Copyright © '}\n                <Link color=\"inherit\" href=\"cseanitw.in\">\n                  CSEA\n                </Link>{' '}\n                {new Date().getFullYear()}.\n              </Typography>\n            </Box>\n          </Box>\n        </Grid>\n      </Grid>\n    </ThemeProvider>\n  );\n}\n\nexport { SignUp };\n","export const quizmasQuestion = {\n  _id: '61c6e118722ad722a270ac03',\n  imageUrl: '',\n  day: 6,\n  question:\n    'On the night of Christmas Santa was riding his sleigh to deliver the gifts in a locality which looks like a rectangle of length n units and breadth m units and each house occupies one 1 x 1 area. Due to a strong wind two gift boxes have fallen from his sleigh and are somewhere in the locality these gifts are supposed to be delivered somewhere else. While trying to collect the two gifts, Santa was able to deliver the remaining gifts to maximum number of houses and after collecting the gifts he returned to the initial position and took a good look over the happy/delightful night and continued his journey to spread joy. Can you tell us where the two gifts were dropped in the locality – if every house can be marked as (x, y)  and Santa cannot move diagonally.',\n  createdAt: '2021-12-25T09:15:04.118Z',\n  updatedAt: '2021-12-25T09:15:04.118Z',\n  __v: 0,\n};\n","/* eslint-disable react/jsx-props-no-spreading */\n\nimport { Grid, Typography, Card, CardContent } from '@mui/material';\nimport Box from '@mui/material/Box';\nimport React, { useEffect, useState } from 'react';\nimport Alert from '@mui/material/Alert';\nimport IconButton from '@mui/material/IconButton';\nimport Collapse from '@mui/material/Collapse';\nimport Button from '@mui/material/Button';\nimport CloseIcon from '@mui/icons-material/Close';\nimport { useInput } from '@mui/base';\nimport { styled } from '@mui/system';\nimport { useNavigate } from 'react-router-dom';\nimport { createTheme, responsiveFontSizes, ThemeProvider } from '@mui/material/styles';\nimport { quizmasQuestion } from '../constants/sampleQuizmas';\nimport '../css/quizmas.css';\nimport { Navbar } from '../components/navbar';\n\nlet theme = createTheme();\ntheme = responsiveFontSizes(theme);\n\nconst StyledInputElement = styled('input')`\n  width: 200px;\n  font-size: 1rem;\n  font-family: IBM Plex Sans, sans-serif;\n  font-weight: 400;\n  line-height: 1.4375em;\n  background: rgb(243, 246, 249);\n  border: 1px solid #e5e8ec;\n  border-radius: 10px;\n  padding: 6px 10px;\n  color: #20262d;\n  transition: width 300ms ease;\n  text-align: 'center'\n\n  &:hover {\n    background: #eaeef3;\n    border-color: #e5e8ec;\n  }\n\n  &:focus {\n    outline: none;\n    width: 220px;\n    transition: width 200ms ease-out;\n  }\n`;\n\nconst CustomInput = React.forwardRef(\n  (\n    props: React.InputHTMLAttributes<HTMLInputElement>,\n    ref: React.ForwardedRef<HTMLInputElement>,\n  ) => {\n    const { getRootProps, getInputProps } = useInput(props, ref);\n\n    return (\n      <div {...getRootProps()}>\n        <StyledInputElement {...props} {...getInputProps()} />\n      </div>\n    );\n  },\n);\n\nfunction QuizMas() {\n  const [isReady, setIsReady] = useState(false);\n  const [response, setResponse] = useState('');\n  const [open, setOpen] = useState(false);\n  const [errText, setErrText] = useState('');\n  const [result, setResult] = useState({ message: '', expectedRankToday: '' });\n  const navigate = useNavigate();\n  const userId = localStorage.getItem('csea-quizmas-token');\n  useEffect(() => {\n    if (!userId) {\n      navigate('/register');\n    }\n    setIsReady(true);\n  }, []);\n\n  useEffect(() => {\n    if (result.message) {\n      if (result.expectedRankToday) {\n        if (parseInt(result.expectedRankToday, 10) < 10)\n          setErrText(`Yayy!! You're ranked ${result.expectedRankToday} on this question!!!`);\n        else setErrText(`Yayy!! You're among the first few on this question!!!`);\n      } else {\n        setErrText(result.message);\n      }\n    }\n  }, [result]);\n\n  const submit = () => {\n    if (response.length >= 1) {\n      const controller = new AbortController();\n      const id = setTimeout(() => controller.abort(), 10000);\n      const requestOptions = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          userId,\n          day: quizmasQuestion.day,\n          answer: response,\n        }),\n        signal: controller.signal,\n      };\n      fetch('https://csea-backend.herokuapp.com/api/check', requestOptions)\n        .then((res) => {\n          if (!res.ok) {\n            console.log(res);\n            throw new Error('response is not ok');\n          }\n          setOpen(true);\n          return res.json();\n        })\n        .then((val) => setResult(val))\n        .catch((err) => {\n          console.log(err);\n          // window.location.href = '/';\n        })\n        .finally(() => clearTimeout(id));\n    }\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Navbar />\n      {isReady ? (\n        <Grid className=\"baseGrid\" style={{ overflow: 'auto' }}>\n          <Grid\n            container\n            xs={12}\n            direction=\"row\"\n            style={{\n              userSelect: 'none',\n              height: 'auto',\n              margin: '0 auto',\n            }}\n          >\n            {/* wishes here */}\n\n            <Grid item md={12} height=\"max-content\" margin=\"auto\" container direction=\"column\">\n              <Typography variant=\"h3\" color=\"white\" fontWeight={600}>\n                Quizzmas{' '}\n              </Typography>\n              <Typography variant=\"h4\" color=\"white\" fontWeight={500}>\n                Day {quizmasQuestion.day}\n              </Typography>\n              {/* <Typography variant=\"h4\" fontWeight=\"bold\" color=\"white\">\n                Bonus Question: If you know you know ;)\n              </Typography> */}\n            </Grid>\n\n            {/* main quiz panel will appear here */}\n            <Grid\n              item\n              xs={12}\n              md={6}\n              margin=\"0 auto\"\n              borderRadius=\"15px\"\n              container\n              direction=\"column\"\n            >\n              <Card\n                sx={{ padding: '2', margin: '3vh 2vw', borderRadius: '0px' }}\n                variant=\"outlined\"\n                elevation={4}\n              >\n                <Collapse in={open}>\n                  <Alert\n                    severity=\"info\"\n                    action={\n                      <IconButton\n                        aria-label=\"close\"\n                        color=\"inherit\"\n                        size=\"small\"\n                        onClick={() => {\n                          setOpen(false);\n                        }}\n                      >\n                        <CloseIcon fontSize=\"inherit\" />\n                      </IconButton>\n                    }\n                    sx={{ mb: 2 }}\n                  >\n                    {errText}\n                  </Alert>\n                </Collapse>\n                <CardContent>\n                  {/* Question */}\n                  {quizmasQuestion.imageUrl !== '' ? (\n                    <Grid item container direction=\"row\">\n                      <Grid item md={4} xs={12}>\n                        <img\n                          src={quizmasQuestion.imageUrl}\n                          alt={`${quizmasQuestion.imageUrl}`}\n                          style={{\n                            height: '150px',\n                            margin: 'auto',\n                            padding: '1vh',\n                            borderRadius: '15px',\n                            objectFit: 'contain',\n                          }}\n                        />\n                      </Grid>\n                      <Grid\n                        item\n                        md={8}\n                        xs={12}\n                        style={{\n                          margin: 'auto',\n                        }}\n                      >\n                        <Box padding=\"1vh\" mt={1} mb={3} sx={{ width: '100%', border: '' }}>\n                          <Typography fontWeight={500}> {quizmasQuestion.question}</Typography>\n                        </Box>\n                      </Grid>\n                    </Grid>\n                  ) : (\n                    <Grid\n                      item\n                      style={{\n                        margin: 'auto',\n                      }}\n                    >\n                      <Box\n                        padding=\"1vh\"\n                        fontWeight={400}\n                        mt={1}\n                        mb={2}\n                        sx={{ width: '100%', border: '' }}\n                      >\n                        <Typography variant=\"h5\" fontWeight={500}>\n                          {' '}\n                          {quizmasQuestion.question}\n                        </Typography>\n                        {/* hint */}\n                        <Typography variant=\"h6\">\n                          (PS: If answer is (a,b) enter &apos;a,b&apos; )\n                        </Typography>\n                      </Box>\n                    </Grid>\n                  )}\n                  <hr />\n                  <br />\n                  <CustomInput\n                    aria-label=\"Demo input\"\n                    placeholder=\"Type something...\"\n                    id=\"response-input\"\n                    onChange={(e) => setResponse(e.target.value)}\n                    style={{ width: '75%' }}\n                  />\n                  <Button\n                    variant=\"contained\"\n                    style={{\n                      margin: '10px',\n                      marginTop: '20px',\n                      width: '50%',\n                      backgroundColor: '#F12337',\n                    }}\n                    value={response}\n                    onClick={() => submit()}\n                  >\n                    Check\n                  </Button>\n                </CardContent>\n                <hr />\n              </Card>\n              <Typography sx={{ color: 'white', fontWeight: 'bold' }}>\n                CSEA Wishes You a Merry Christmas!\n              </Typography>\n            </Grid>\n          </Grid>\n        </Grid>\n      ) : (\n        <></>\n      )}\n    </ThemeProvider>\n  );\n}\n\nexport { QuizMas };\n","/* eslint-disable import/no-default-export */\n/* eslint import/newline-after-import: \"off\" */\nimport React from 'react';\nimport './App.css';\nimport { HashRouter as Router, Route, Routes } from 'react-router-dom';\n// import { Test } from './pages/test';\nimport './css/font.css';\n// import { Navbar } from './components/navbar';\nimport { SignIn } from './pages/login';\nimport { Waiting } from './pages/waiting';\nimport { SignUp } from './pages/signup';\nimport { QuizMas } from './pages/quizmas';\n// import { Quiz } from './pages/quiz';\nfunction App() {\n  return (\n    <div className=\"App\" style={{ backgroundColor: '#FAFAFA', minHeight: '100vh' }}>\n      {/* <header className=\"App-header\">\n        Welcome to <img src=\"/logo192.png\" alt=\"CSEA logo\" width=\"200px\" />\n        <p>\n          Solve <code>the Quiz</code> and win prizes.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Visit CSEA\n        </a>\n      </header> */}\n      <div>\n        <Router>\n          {/* <Navbar /> */}\n          <Routes>\n            <Route path=\"/\" element={<SignIn />} />\n            {/* <Route path=\"/quiz\" element={<Quiz />} /> */}\n            <Route path=\"/61c6b095c51a9900231414e6\" element={<QuizMas />} />\n            <Route path=\"/login\" element={<SignIn />} />\n            <Route path=\"/register\" element={<SignUp />} />\n            <Route path=\"/wait\" element={<Waiting />} />\n            {/* <Route path=\"/result-wait\" element={<Quiz />} /> */}\n            {/* <Route path=\"/result\" element={<Result />} /> */}\n          </Routes>\n        </Router>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","/* eslint-disable import/no-default-export */\nimport { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}